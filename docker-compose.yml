version: "3.9"

services:
  webapp:
    image: i-vresse/bartended-haddock3
    build:
      context: .
    restart: always
    depends_on:
      bartender:
        condition: service_started
      webappdb:
        condition: service_healthy
    ports:
      - "8080:8080"
    env_file:
      - ./.env
    environment:
      BARTENDER_API_URL: "http://bartender:8000"
      DATABASE_URL: postgresql://postgres:postgres@webappdb:5432/postgres
      BARTENDER_PRIVATE_KEY: /app/src/private_key.pem
    volumes:
      - type: bind
        source: ./private_key.pem
        target: /app/src/private_key.pem

  webappdb:
    image: postgres:15.2-bullseye
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - webapp-db-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
      interval: 2s
      timeout: 3s
      retries: 40

  webappmigrator:
    build:
      context: .
      dockerfile: prisma/Dockerfile
    command: npm run setup
    restart: "no"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@webappdb:5432/postgres
    depends_on:
      webappdb:
        condition: service_healthy

  bartender:
    build:
      context: ../bartender
      dockerfile: ./deploy/Dockerfile
    image: bartender:${BARTENDER_VERSION:-latest}
    restart: always
    env_file:
      - ../bartender/.env
    volumes:
      - type: bind
        source: ../bartender/config.yaml
        target: /app/src/config.yaml
      - type: bind
        source: ./public_key.pem
        target: /app/src/public_key.pem
      # to store jobs on NFS share replace line below with bind mount
      - bartender-job-data:/tmp/jobs
    depends_on:
      bartenderdb:
        condition: service_healthy
    environment:
      BARTENDER_HOST: 0.0.0.0
      BARTENDER_DB_HOST: bartender-db
      BARTENDER_DB_PORT: 5432
      BARTENDER_DB_USER: bartender
      BARTENDER_DB_PASS: bartender
      BARTENDER_DB_BASE: bartender
      BARTENDER_JOB_ROOT: /tmp/jobs
      BARTENDER_PUBLIC_KEY: /app/src/public_key.pem

  # TODO user same database for webapp and bartender
  # the tables do not overlap
  bartenderdb:
    image: postgres:13.6-bullseye
    hostname: bartender-db
    environment:
      POSTGRES_PASSWORD: "bartender"
      POSTGRES_USER: "bartender"
      POSTGRES_DB: "bartender"
    volumes:
      - bartender-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U bartender
      interval: 2s
      timeout: 3s
      retries: 40

  bartendermigrator:
    build:
      context: ../bartender
      dockerfile: ./deploy/Dockerfile
    image: bartender:${BARTENDER_VERSION:-latest}
    restart: "no"
    command: alembic upgrade head
    environment:
      BARTENDER_DB_HOST: bartender-db
      BARTENDER_DB_PORT: 5432
      BARTENDER_DB_USER: bartender
      BARTENDER_DB_PASS: bartender
      BARTENDER_DB_BASE: bartender
    depends_on:
      bartenderdb:
        condition: service_healthy

volumes:
  webapp-db-data:
  bartender-db-data:
  bartender-job-data:
