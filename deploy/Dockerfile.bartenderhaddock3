# Dockerfile for bartender web service with haddock3, lightdock, gdock executables.
FROM python:3.9-slim-bookworm
LABEL org.opencontainers.image.source=https://github.com/i-VRESSE/haddock3-webapp/blob/main/deploy/Dockerfile.bartenderhaddock3
LABEL org.opencontainers.image.licenses=Apache-2.0
LABEL org.opencontainers.image.description="bartender web service with haddock3, lightdock, gdock executables. Image does not contain real cns executable, downstream should bind or copy it to /opt/haddock3/bin/cns."

ARG HADDOCK3_GHORG=haddocking
ARG HADDOCK3_VERSION=main
ARG BARTENDER_VERSION=main
ARG GDOCK_VERSION=main
ARG LIGHTDOCK_VERSION=0.9.4

COPY --from=ghcr.io/ufoscout/docker-compose-wait:latest /wait /wait

# Common dependencies =================================================================================================

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && \
  apt-get install -y --no-install-recommends \
  build-essential git ca-certificates curl libgfortran5 \
  wget \
  &&  \
  apt-get clean && rm -rf /var/lib/apt/lists/* \
  && \
  pip install --upgrade pip

# haddock3 ============================================================================================================
WORKDIR /opt/haddock3
RUN echo cachebust=1 && git clone --recursive https://github.com/${HADDOCK3_GHORG}/haddock3.git . && git checkout ${HADDOCK3_VERSION}
WORKDIR /opt/haddock3/src/fcc/src
RUN make
WORKDIR /opt/haddock3/src/fast-rmsdmatrix/src
RUN chmod u+x Makefile && make fast-rmsdmatrix
WORKDIR /opt/haddock3
RUN pip install -r requirements.txt && python setup.py develop && mkdir -p bin
WORKDIR /
ENV PYTHONPATH=/opt/haddock3/src

# lightdock ==========================================================================================================

RUN pip install lightdock==${LIGHTDOCK_VERSION}

# gdock =============================================================================================================

WORKDIR /opt/gdock
RUN git clone https://github.com/gdocking/gdock.git . && git checkout ${GDOCK_VERSION}
RUN pip install matplotlib==3.8.4  # dont install 3.9.0rc2
RUN python setup.py develop
RUN bash install.sh /opt/gdock
ENV GDOCK_PATH=/opt/gdock

# bartender ==========================================================================================================

WORKDIR /opt/bartender
RUN git clone https://github.com/i-VRESSE/bartender.git . && git checkout ${BARTENDER_VERSION}
RUN pip install .

CMD ["/usr/local/bin/bartender", "serve"]

HEALTHCHECK --interval=30s --timeout=5s CMD curl --fail http://localhost:8000/api/health || exit 1

# non-root user ======================================================================================================

ARG USERNAME=bartender
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Create the user
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \
    #
    # [Optional] Add sudo support. Omit if you don't need to install software after connecting.
    && apt-get update \
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

RUN mkdir /jobs && chown -R $USERNAME:$USERNAME /jobs

# All commands from here on will be run as the bartender user and not as root.
USER ${USERNAME}

RUN mkdir /home/bartender/.ssh && chmod 700 /home/bartender/.ssh
