/* tslint:disable */
/* eslint-disable */
/**
 * bartender
 * Job middleware for i-VRESSE
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents the result of running a InteractiveApp.
 * 
 * Attributes:
 *     returncode: The return code of the InteractiveApp process.
 *     stderr: The standard error output of the InteractiveApp process.
 *     stdout: The standard output of the InteractiveApp process.
 * @export
 * @interface InteractiveAppResult
 */
export interface InteractiveAppResult {
    /**
     * 
     * @type {number}
     * @memberof InteractiveAppResult
     */
    returncode: number;
    /**
     * 
     * @type {string}
     * @memberof InteractiveAppResult
     */
    stderr: string;
    /**
     * 
     * @type {string}
     * @memberof InteractiveAppResult
     */
    stdout: string;
}

/**
 * Check if a given object implements the InteractiveAppResult interface.
 */
export function instanceOfInteractiveAppResult(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "returncode" in value;
    isInstance = isInstance && "stderr" in value;
    isInstance = isInstance && "stdout" in value;

    return isInstance;
}

export function InteractiveAppResultFromJSON(json: any): InteractiveAppResult {
    return InteractiveAppResultFromJSONTyped(json, false);
}

export function InteractiveAppResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): InteractiveAppResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'returncode': json['returncode'],
        'stderr': json['stderr'],
        'stdout': json['stdout'],
    };
}

export function InteractiveAppResultToJSON(value?: InteractiveAppResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'returncode': value.returncode,
        'stderr': value.stderr,
        'stdout': value.stdout,
    };
}

