/* tslint:disable */
/* eslint-disable */
/**
 * bartender
 * Job middleware for i-VRESSE
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OAuthAccountName } from './OAuthAccountName';
import {
    OAuthAccountNameFromJSON,
    OAuthAccountNameFromJSONTyped,
    OAuthAccountNameToJSON,
} from './OAuthAccountName';

/**
 * DTO for profile of current user model.
 * @export
 * @interface UserProfileInputDTO
 */
export interface UserProfileInputDTO {
    /**
     * 
     * @type {string}
     * @memberof UserProfileInputDTO
     */
    email: string;
    /**
     * 
     * @type {Array<OAuthAccountName>}
     * @memberof UserProfileInputDTO
     */
    oauthAccounts: Array<OAuthAccountName>;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserProfileInputDTO
     */
    roles: Array<string>;
}

/**
 * Check if a given object implements the UserProfileInputDTO interface.
 */
export function instanceOfUserProfileInputDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "oauthAccounts" in value;
    isInstance = isInstance && "roles" in value;

    return isInstance;
}

export function UserProfileInputDTOFromJSON(json: any): UserProfileInputDTO {
    return UserProfileInputDTOFromJSONTyped(json, false);
}

export function UserProfileInputDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfileInputDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': json['email'],
        'oauthAccounts': ((json['oauth_accounts'] as Array<any>).map(OAuthAccountNameFromJSON)),
        'roles': json['roles'],
    };
}

export function UserProfileInputDTOToJSON(value?: UserProfileInputDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'oauth_accounts': ((value.oauthAccounts as Array<any>).map(OAuthAccountNameToJSON)),
        'roles': value.roles,
    };
}

