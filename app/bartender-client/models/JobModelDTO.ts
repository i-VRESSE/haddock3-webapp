/* tslint:disable */
/* eslint-disable */
/**
 * bartender
 * Job middleware for i-VRESSE
 *
 * The version of the OpenAPI document: 0.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 * DTO for job models.
 *
 * It returned when accessing job models from the API.
 * @export
 * @interface JobModelDTO
 */
export interface JobModelDTO {
  /**
   *
   * @type {number}
   * @memberof JobModelDTO
   */
  id: number;
  /**
   *
   * @type {string}
   * @memberof JobModelDTO
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof JobModelDTO
   */
  application: string;
  /**
   *
   * @type {string}
   * @memberof JobModelDTO
   */
  state: JobModelDTOStateEnum;
  /**
   *
   * @type {Date}
   * @memberof JobModelDTO
   */
  createdOn: Date;
  /**
   *
   * @type {Date}
   * @memberof JobModelDTO
   */
  updatedOn: Date;
}

/**
 * @export
 */
export const JobModelDTOStateEnum = {
  New: "new",
  Queued: "queued",
  Running: "running",
  StagingOut: "staging_out",
  Ok: "ok",
  Error: "error",
} as const;
export type JobModelDTOStateEnum =
  (typeof JobModelDTOStateEnum)[keyof typeof JobModelDTOStateEnum];

/**
 * Check if a given object implements the JobModelDTO interface.
 */
export function instanceOfJobModelDTO(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "id" in value;
  isInstance = isInstance && "name" in value;
  isInstance = isInstance && "application" in value;
  isInstance = isInstance && "state" in value;
  isInstance = isInstance && "createdOn" in value;
  isInstance = isInstance && "updatedOn" in value;

  return isInstance;
}

export function JobModelDTOFromJSON(json: any): JobModelDTO {
  return JobModelDTOFromJSONTyped(json, false);
}

export function JobModelDTOFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): JobModelDTO {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    name: json["name"],
    application: json["application"],
    state: json["state"],
    createdOn: new Date(json["created_on"]),
    updatedOn: new Date(json["updated_on"]),
  };
}

export function JobModelDTOToJSON(value?: JobModelDTO | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    name: value.name,
    application: value.application,
    state: value.state,
    created_on: value.createdOn.toISOString(),
    updated_on: value.updatedOn.toISOString(),
  };
}
