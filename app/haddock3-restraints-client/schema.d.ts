// This file was generated with "npm run generate-client:restraints" command.
// Do not edit this file manually.

export interface paths {
  "/passive_from_active": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Calculate Passive From Active
     * @description Calculate active restraints to passive restraints.
     */
    post: operations["calculate_passive_from_active_passive_from_active_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/actpass_to_ambig": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Calculate Actpass To Ambig */
    post: operations["calculate_actpass_to_ambig_actpass_to_ambig_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    /** ActPassToAmbigRequest */
    ActPassToAmbigRequest: {
      /**
       * Active1
       * @description List of active residues for the first model.
       */
      active1: number[];
      /**
       * Active2
       * @description List of active residues for the second model.
       */
      active2: number[];
      /**
       * Passive1
       * @description List of passive residues for the first model.
       */
      passive1: number[];
      /**
       * Passive2
       * @description List of passive residues for the second model.
       */
      passive2: number[];
      /**
       * Segid1
       * @description Segid to use for the first model.
       * @default A
       */
      segid1: string;
      /**
       * Segid2
       * @description Segid to use for the second model.
       * @default B
       */
      segid2: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** PassiveFromActiveRequest */
    PassiveFromActiveRequest: {
      /**
       * Structure
       * @description The structure file as base64 encoded string.
       */
      structure: string;
      /**
       * Active
       * @description List of active restraints.
       */
      active: number[];
      /**
       * Chain
       * @description The chain identifier.
       * @default A
       */
      chain: string;
      /**
       * Surface
       * @description List of surface restraints.
       * @default []
       */
      surface: number[];
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  calculate_passive_from_active_passive_from_active_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PassiveFromActiveRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": number[];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  calculate_actpass_to_ambig_actpass_to_ambig_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ActPassToAmbigRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "text/plain": string;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
